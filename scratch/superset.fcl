(*============================================================================*)
(* FoCaLize Tutorial : Implementing Sets - Supersets                          *)
(*============================================================================*)
(* File: superset.fcl / Created: June 2009 / Mod: June 2009                   *)
(* Lang: FoCaLize, version 0.2.0 (June 2009) / Dep: basics                    *)
(* By Eric Jaeger - UPMC/LIP6 & SGDN/DCSSI                                    *)
(*============================================================================*)

(**
@title FoCaLize Tutorial : Implementing Sets - Supersets
@author The FoCaLize Team
@description Basic species definitions (for educational purposes only)
*)

use "basics" ;;

(* Supersets =================================================================*)
(* Any type (empty, finite or infinite) with an equivalence relation          *)

species Superset =

 signature ( = ) : Self -> Self -> basics#bool ;
 property eq_refl : all x : Self, x = x ;
 property eq_symm : all x y : Self, x = y -> y = x ;
 property eq_tran : all x y z : Self, x = y -> y = z -> x = z ;

end ;;

(* Non-Empty Supersets =======================================================*)
(* Any non empty type with an equivalence relation                            *)

species SupersetWitness  =

 inherit Superset ;

 signature witness : Self ;

end ;;

(* Supersets with a Print and a Parse ========================================*)
(* Non-empty as parsing always returns a value                                *)

species PrintParseSuperset =

 inherit SupersetWitness ;

 signature print : Self -> basics#unit ;

 signature parse : basics#string -> Self ;

end ;;

(*============================================================================*)
use "basics" ;;
open "basics" ;;

(* ****************************************************************** *)
(* Must pass.                                                         *)
(* Example showing how now use a collection defined outside the       *)
(* current one (i.e. the used one not a parameter) in a collection    *)
(* or a species. [Ints] is straightly used in [Contrete_couple_ints]. *)
(* ****************************************************************** *)

species Contrete_int =
  inherit Basic_object ;
  representation = basics#int ;
  let printer (x : Self) = print_int (x) ;
  let create (x : int) : Self = 15 ;
end ;;
collection Int = implement Contrete_int ; end ;;


species Contrete_couple_ints =
  inherit Basic_object ;
  representation = (Int * Int) ;
  let create (x : int) : Self = (Int!create (x), Int!create (x)) ;

  let printer (x : Self) =
     let a = Int!printer (fst (x)) in
     Int!printer (snd (x)) ;
end ;;
collection Couple_ints = implement Contrete_couple_ints ; end ;;

let foo = Couple_ints!create (1) ;;
Couple_ints!printer (foo) ;;

#!/bin/sh

# ************************************************************************** #
#                                                                            #
#                        FoCaLiZe compiler                                   #
#                                                                            #
#            François Pessaux                                                #
#            Pierre Weis                                                     #
#            Damien Doligez                                                  #
#            Raphaël Cauderlier                                              #
#                                                                            #
#                               LIP6  --  INRIA Rocquencourt                 #
#                                                                            #
#  Copyright 2007 - ... LIP6 and INRIA                                       #
#            2012 - ... ENSTA ParisTech                                      #
#            2013 - ... CNAM CEDRIC-CPR                                      #
#  Distributed only by permission.                                           #
#                                                                            #
# ************************************************************************** #


BOLDTAG="\033[1m"
UNDERLINETAG="\033[4m"
NORMALTAG="\033[0m"



# #############################################################################
# Commands stuff.






# Find GIT. This is used to make the build-stamp to know what was the last
# commit involved in the current build.
echo "#!/bin/sh" > gitlastsha.sh
echo "# Do not modify manually. This file is automatically generated" >> gitlastsha.sh
echo "# and not stored in the repository." >> gitlastsha.sh
GIT=`which git`
# Check that git is installed.
if [ "$GIT" != "" ] ;
then
    # Check that we are in a git repository.
    git log > /dev/null
    if [ "$?" = 0 ] ;
    then
        echo "git log -1 --format=\"%H\"" >> gitlastsha.sh
    else
        echo "echo git log not available" >> gitlastsha.sh
    fi
else
    echo "echo git log not available" >> gitlastsha.sh
fi
chmod +x gitlastsha.sh



# #############################################################################
# Installation stuff for binaries and libraries.
if [ $INSTALL_PREFIX_GIVEN != true ]
then
    if [ $INTERACTIVE = true ]
    then
        # Ask question only in interactive mode, otherwise keep default value.
        echo $BOLDTAG"Where to install FoCaLize binaries ?"$NORMALTAG
        echo "Default is $INSTALL_BIN_DIR."
        echo "Just press enter to use default location."
        read USER_INPUT
        if [ "$USER_INPUT" != "" ] ;
        then
            INSTALL_BIN_DIR=$USER_INPUT
        fi
    fi
fi
# Else, explicit install prefix given while parsing options, keep it blindly.

if [ $INSTALL_PREFIX_GIVEN != true ]
then
    if [ $INTERACTIVE = true ]
    then
        # Ask question only in interactive mode, otherwise keep default value.
        echo $BOLDTAG"Where to install FoCaLize libraries ?"$NORMALTAG
        echo "Default is $INSTALL_LIB_DIR."
        echo "Just press enter to use default location."
        read USER_INPUT
        if [ "$USER_INPUT" != "" ] ;
        then
            INSTALL_LIB_DIR=$USER_INPUT
        fi
    fi
fi
# Else, explicit install prefix given while parsing options, keep it blindly.

if [ $INSTALL_PREFIX_GIVEN != true ]
then
    if [ $INTERACTIVE = true ]
    then
        # Ask question only in interactive mode, otherwise keep default value.
        echo $BOLDTAG"Where to install FoCaLize man pages ?"$NORMALTAG
        echo "Default is $INSTALL_MAN_DIR."
        echo "Just press enter to use default location."
        read USER_INPUT
        if [ "$USER_INPUT" != "" ] ;
        then
            INSTALL_MAN_DIR=$USER_INPUT
        fi
    fi
fi
# Else, explicit install prefix given while parsing options, keep it blindly.

if [ $INSTALL_PREFIX_GIVEN != true ]
then
    if [ $INTERACTIVE = true ]
    then
        # Ask question only in interactive mode, otherwise keep default value.
        echo $BOLDTAG"Where to install FoCaLize other documentation ?"$NORMALTAG
        echo "Default is $INSTALL_DOC_DIR."
        echo "Just press enter to use default location."
        read USER_INPUT
        if [ "$USER_INPUT" != "" ] ;
        then
            INSTALL_DOC_DIR=$USER_INPUT
        fi
    fi
fi
# Else, explicit install prefix given while parsing options, keep it blindly.




# #############################################################################



# Check if Hevea is available to convert docs in HTML.
HEVEAFOUND=false
HEVEAPATH=`which hevea`
if [ "$HEVEAPATH" != "" ] ;
    then
       HEVEAFOUND=true
fi


# #############################################################################
# Generate the configuration vars.

CONFIGURATION_VARS_FILE=.config_var

rm -f $CONFIGURATION_VARS_FILE
echo "FOCALIZEC_COQ_COMPATIBILITY_OPTION=$FOCALIZEC_COQ_COMPATIBILITY_OPTION" >> $CONFIGURATION_VARS_FILE
echo "SUDO=$SUDO" >> $CONFIGURATION_VARS_FILE
echo "HEVEAFOUND=$HEVEAFOUND" >> $CONFIGURATION_VARS_FILE
chmod a-w $CONFIGURATION_VARS_FILE


# #############################################################################
# Summary feedback.
echo "Configuration summary for FoCaLize:"
echo "  binaries -> $INSTALL_BIN_DIR"
echo "  libraries -> $INSTALL_LIB_DIR"
echo "  man pages -> $INSTALL_MAN_DIR"
echo "  other documentation -> $INSTALL_DOC_DIR"
echo "  ocaml bytecode compiler = $CAMLBYT"
echo "  ocaml binary compiler = $CAMLBIN"
echo "  coq = $COQC"
echo "  dkcheck = $DKCHECK"
echo "  skcheck = $SKCHECK"
echo "  skdep = $SKDEP"
echo "  zvtov = $ZVTOV"
echo "  zenon = $ZENON"
echo "  git = $GIT  (not important if not available)"
echo "  zenon libraries directory = $ZENON_LIB_DIR"
echo "  Use sudo to install -> $SUDO"
if [ "$HEVEAFOUND" != "" ] ;
then
    echo "  Hevea DVI to HTML utility found, HTML docs will be generated."
else
    echo "  Hevea DVI to HTML utility NOT found, HTML docs won't be generated."
fi
if [ ! "$FOCALIZEC_COQ_COMPATIBILITY_OPTION" = "" ]
then
    echo $BOLDTAG"ATTENTION:$NORMALTAG you are using a version of Coq < 8.4. FoCaliZeC must be called with"
    echo "the $BOLDTAG$FOCALIZEC_COQ_COMPATIBILITY_OPTION$NORMALTAG option."
fi
echo "Done. Now, please invoke: 'make depend world doc install'"

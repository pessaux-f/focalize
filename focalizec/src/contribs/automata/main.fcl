(***********************************************************************)
(*                                                                     *)
(*                        FoCaLize compiler                            *)
(*                                                                     *)
(*            Philippe Ayrault                                         *)
(*            François Pessaux                                         *)
(*            Pierre Weis                                              *)
(*            Damien Doligez                                           *)
(*                                                                     *)
(*                               LIP6  -  INRIA Rocquencourt           *)
(*                                                                     *)
(*  Copyright 2007 LIP6 and INRIA                                      *)
(*  Distributed only by permission.                                    *)
(*                                                                     *)
(***********************************************************************)

(* $Id: main.fcl,v 1.3 2009-05-15 23:46:21 weis Exp $ *)

(*
 *@version $Revision: 1.3 $ $Date: 2009-05-15 23:46:21 $
 *)
use "basics";;
use "sets_orders";;
use "gen_def";;
use "request";;
use "switch_recovery_normal_automata";;
use "switch_recovery_reverse_automata";;
use "switch_recovery_automata";;
use "switch_automata";;

open "gen_def";;
open "request";;
open "switch_recovery_normal_automata";;
open "switch_recovery_reverse_automata";;
open "switch_recovery_automata";;
open "switch_automata";;

let print_state( state ) =
  let _a = basics#print_string(Coll_state_aut1!print(
                          Coll_switch_automata!get_state(state))) in
  let _a = basics#print_string(", ")in
  let _a = basics#print_string(Coll_state_aut2!print(
      Coll_switch_recovery_automata!get_state(
        Coll_switch_automata!st_aut2(state)))) in
  let _a = basics#print_string(", (")in
  let _a = basics#print_string(Coll_state_aut3!print(
      Coll_switch_recovery_reverse_automata!get_state(
        Coll_switch_recovery_automata!st_aut_p2(
          Coll_switch_automata!st_aut2(state))))) in
  let _a = basics#print_string(", ")in
  let _a = basics#print_string(Coll_state_aut4!print(
      Coll_switch_recovery_normal_automata!get_state(
        Coll_switch_recovery_automata!st_aut_p3(
          Coll_switch_automata!st_aut2(state))))) in
  let _a = basics#print_string(")") in
  basics#print_string("\n")
(* PHA : Erreur syntaxe
  let _a = basics#print_string("\n") in
    ()
*)
;;


let state_0 = Coll_switch_automata!init_state;;
basics#print_string("                   -> ");;
#print_state( #state_0 );;

let state_1 = Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_0, Coll_requests!set(0)));;
basics#print_string("normal_switched    -> ");;
#print_state( #state_1 );;

let state_2 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_1, Coll_requests!set(1)));;
basics#print_string("reverse_switched   -> ");;
#print_state( #state_2 );;

let state_3 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_2, Coll_requests!set(2)));;
basics#print_string("moving             -> ");;
#print_state( #state_3 );;


let state_4 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_3, Coll_requests!set(0)));;
basics#print_string("normal_switched    -> ");;
#print_state( #state_4 );;


let state_5 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_4, Coll_requests!set(2)));;
basics#print_string("moving             -> ");;
#print_state( #state_5 );;

let state_6 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_5, Coll_requests!set(4)));;
basics#print_string("time_out_moving    -> ");;
#print_state( #state_6 );;

let state_6 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_6, Coll_requests!set(0)));;
basics#print_string("normal_switched    -> ");;
#print_state( #state_6 );;


let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_6, Coll_requests!set(2)));;
basics#print_string("moving             -> ");;
#print_state( #state_7 );;

let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_7, Coll_requests!set(1)));;
basics#print_string("reverse_switched   -> ");;
#print_state( #state_7 );;

let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_7, Coll_requests!set(2)));;
basics#print_string("moving             -> ");;
#print_state( #state_7 );;

let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_7, Coll_requests!set(0)));;
basics#print_string("normal_switched    -> ");;
#print_state( #state_7 );;

let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_7, Coll_requests!set(2)));;
basics#print_string("moving             -> ");;
#print_state( #state_7 );;

let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_7, Coll_requests!set(1)));;
basics#print_string("reverse_switched   -> ");;
#print_state( #state_7 );;

let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_7, Coll_requests!set(2)));;
basics#print_string("moving             -> ");;
#print_state( #state_7 );;

let state_7 =
    Coll_switch_automata!tau_p1(Coll_switch_automata!tau(#state_7, Coll_requests!set(0)));;
basics#print_string("normal_switched    -> ");;
#print_state( #state_7 );;

lib
==
Dans depertoir lib : les utilitaires qui n'ont rien a voir avec la
secu + From_RENAUD_CATHERINE qui contient le dev sur les iterateurs de
Renaud et Catherine


1- listes.fcl : utilitaires sur les listes (potentiellement a completer
selon les besoins) : on a les listes avec mem et le = natif sur les
elements de la liste et on a les listes dont les elements sont dans un
setoide et dont la fonction d'appartenance s'appelle belongs et repose sur
l'egalite des setoides

2- ternary_produc.fcl : representation abstraite des triplets +
representation ``concrete'' avec des paires * ... idealement on
aimerait pouvoir utiliser l'espece Cartesian_product de Renaud, mais
cela nous obligerait a parametrer deux fois .... d'ou une certaine
lourdeur .... du coup on se contente de 3 assumed sur des proprietes
triviales sur les projections





=============

/!\ à l'utilistation de mem (ancien list_util) à remplacer par belongs !!


Do not modify Renaud's libraries (listes.fcl and coll.fcl)
But remove the useless one (which is ?)


Rename "utils" as "relation" (be careful, there is relation (without self),
and relations (with self), there is some "s" to remove among species' names)


Clean finite set (don't forget to use Renaud's list library)


Check, clean and improve bin_relations_new and finite_relations
(which were copied from "relation mutable")


Link correctly the libraries' files
And check names which (may) have been changed


Make a better "extended product" library (for instance with the proofs)
Cf cartesian product (stdlib)


Solve the basics#( = ) vs Self!( = ) vs Self!equal conflict
(conflict between some libraries)


DOCUMENT EVERYTHING !!!!

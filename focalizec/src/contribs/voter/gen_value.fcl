(***********************************************************************)
(*                                                                     *)
(*                        FoCaLize compiler                            *)
(*                                                                     *)
(*            Philippe Ayrault                                         *)
(*            François Pessaux                                         *)
(*            Pierre Weis                                              *)
(*            Damien Doligez                                           *)
(*                                                                     *)
(*                               LIP6  -  INRIA Rocquencourt           *)
(*                                                                     *)
(*  Copyright 2007 - 2009 LIP6 and INRIA                               *)
(*  Distributed only by permission.                                    *)
(*                                                                     *)
(***********************************************************************)

(* $Id: gen_value.fcl,v 1.3 2009-06-06 13:02:04 ayrault Exp $ *)

use "basics";;
use "sets_orders";;

open "basics";;
open "sets_orders";;


(** Common species defining the exported operations used by the voter.
 This permits to hide (thrue inheritance) the real value species used *)
species Value =
inherit Setoid ;
  (** Operator: Egality between 2 values *)
  signature equal_value : Self -> Self -> bool;

  (* Property needed for voter proving *)
  (** Equal_value is symmetric *)
  property equal_value_symmetric:
   all a b in Self, !equal_value(a, b) -> !equal_value(b, a);

  (** Equal_value is reflexive *)
  property equal_value_reflexive:
   all a in Self, !equal_value(a, a);

end ;;


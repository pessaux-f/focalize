(***********************************************************************)
(*                                                                     *)
(*                        FoCaLize compiler                            *)
(*                                                                     *)
(*            Philippe Ayrault                                         *)
(*            François Pessaux                                         *)
(*            Pierre Weis                                              *)
(*            Damien Doligez                                           *)
(*                                                                     *)
(*                               LIP6  -  INRIA Rocquencourt           *)
(*                                                                     *)
(*  Copyright 2007 - 2009 LIP6 and INRIA                               *)
(*  Distributed only by permission.                                    *)
(*                                                                     *)
(***********************************************************************)

(* $Id: gen_value.fcl,v 1.5 2009-06-10 21:17:04 ayrault Exp $ *)

use "basics";;
use "sets_orders";;

open "basics";;
open "sets_orders";;

(** Common species defining the exported operations used by the voter.
    This permits to hide (thrue inheritance) the real value species used *)
species Gen_value =

  inherit Setoid;

  (** Operator: Consistency rule between 2 values *)
  signature consistency_rule : Self -> Self -> bool;

  (* Property needed for voter proving *)
  (** Consistency rule is symmetric *)
  property consistency_rule_symmetric:
    all a b in Self, consistency_rule (a, b) -> consistency_rule (b, a);

  (** Equal_value is reflexive *)
  property consistency_rule_reflexive:
    all a in Self, consistency_rule (a, a);

end
;;


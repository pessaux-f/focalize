<!--#include virtual="beforetitle-eng.html"-->
$(focal)
<!--#include virtual="aftertitle-eng.html"-->


<div id="container">
<div id="header">
<h1>The $(focal) Essential</h1>
<br />
<hr />
</div>
</div>

<div class="spacer"></div>

<div id="container">
<div id="menu">
<div id="maincontent">

<a href="download/">Download</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="documentation/">Documentation</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="resources/">Resources</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="/">Bug Tracking</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="contacts/">Contacts</a>

</div>
</div>
</div>

<div class="spacer"></div>
<div class="spacer"></div>

<div id="content">

<p>
Welcome to the $(focal) website. This site offers information
about $(focal), some documentation about the language and its
compiler, some training opportunities, and of course, the latest release of
$(focal).
<br>
Overview comes first but more recent news follow below...
</p>

</div>

<div class="spacer"></div>

<div id="main">

<h3>Overview<h3>

<p>
The $(focal) project aims at providing a programming
environment to develop certified programs. The environment is based on
a functional programming language with object-oriented features. The
language allows the programmer to write formal specifications and
proofs of the program in a unified and consistent setting. 
</p>

<p>
From a $(focal) source code development, the
$(focalizec) compiler produces three source files: 
<ul>
<li>
a source file for the $(coq) proof assistant to check the proofs, 
</li>
<li>
a source file for the $(ocaml) compiler to build the executable program, 
</li>
<li>
a source file that contains the documentation extracted from the
development sources.
</li>
</ul>
</p>

<p>
Thanks to built-in inheritance mechanisms, the language allows to
refine a development from the coarse-grain specification to the fully
defined executable program.
</p>

<p>
The $(focal) distribution includes a library of 
mathematical algebraic structures up to multivariate polynomial
rings, a library of security policies and various examples contributed
by $(focal) users. The resulting libraries are noticeably
efficent; for instance, the complex algorithms of the algebraic library
provide runtime performances comparable to the best Computer
Algebra Systems available.
</p>

</div>

<div class="spacer"></div>

<div id="main">

<h3>New release of the $(focal) environment soon (for January 2013)<h3>

<p>
A new release of the $(focal) environment, 
<code>$(project_name) 0.8.0</code>, 
should be available in a near future. $(focal) got
  nearly aslept for some years, without major release despite some
  underground works. The "ghost" 0.7.0 version never became public,
  but the 0.8.0 cumulating the evolutions of the repository is nearly
  ready.
</p>

</div>


<div class="spacer"></div>

<div id="main">
<h3>Current version of the $(focal) environment<h3>
<p>

For about 3 years, the $(focal) language and compiler have been
rewritten from scratch. Numerous enhancements have <span style="font-style:
italic;">been implemented</span>. The syntax has been re-designed to be more
homogenous and flexible. The core language provides new features like
records, irrefutable pattern bindings, simpler &quot;external&quot;
mappings... All syntactic elements (species, collection, record field, sum
type constructors, ...) can be qualified. Entity parameters (&quot;<span
style="font-style:italic;">in</span>&quot; species parameter) are now managed
in a smoother way, collections get a clearer &quot;implementation&quot;
status, preventing confusion between collections and species in the
$(focal) philosophy. The compilation speed has been enhanced. The
global architecture of the compiler enables third party analyses to be
grafted onto the compiler before code generation. A new backend for the C
language is under development and should be available soon (provided license
issues can be worked out). This is the first public release of this entirely
revised system. Currently Fran&ccedil;ois Pessaux, in collaboration with
Pierre Weis and Damien Doligez are in charge of this new version of the
$(focal) environment. If you want more information, please feel
free to contact us.

</p>
</div>

<div class="spacer"></div>

<div id="main">
<h3>SSURF ANR project<h3>

<p>

The SSURF (Safety and Security UndeR Focal) ANR project has
started. This project consists in :

<ul>
  <li>
    Analyze and define the features required for an IDE in
    order to reach high levels of security.
  </li>
  <li>
    Define a generic framework in which many access control policies
    can be expressed.
  </li>
</ul>

</p>

<p>

Further information (in french) can be found
<a href="http://www-spi.lip6.fr/~jaume/ssurf.html">here.</a>

</p>
</div>

<div class="spacer"></div>
<div class="spacer"></div>

<!--#include virtual="endofpage-eng.html"-->

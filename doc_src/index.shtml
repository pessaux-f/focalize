<!--#include virtual="beforetitle-eng.html"-->
$(PROJECT_NAME_TEXT)
<!--#include virtual="aftertitle-eng.html"-->

<!-- \$Id: index.shtml,v 1.9 2009-12-22 15:29:51 habib Exp $ -->

<div id="container">
<div id="header">
<h1>The $(PROJECT_NAME_TEXT) essential</h1>
<br />
<hr />
</div>
</div>

<div class="spacer"></div>

<div id="container">
<div id="menu">
<div id="maincontent">

<a href="download/">Download</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="documentation/">Documentation</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="resources/">Resources</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="/">Bug Tracking</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="contacts/">Contacts</a>

</div>
</div>
</div>

<div class="spacer"></div>
<div class="spacer"></div>

<div id="content">

<p>
Welcome to the $(PROJECT_NAME_TEXT) website. This site offers information
about $(PROJECT_NAME_TEXT), some documentation about the language and its
compiler, some training opportunities, and of course, the latest release of
$(PROJECT_NAME_TEXT).
</p>

</div>

<div class="spacer"></div>

<div id="main">

<h3>Overview<h3>

<p>
The $(PROJECT_NAME_TEXT) project aims at providing a programming
environment to develop certified programs. The environment is based on
a functional programming language with object-oriented features. The
language allows the programmer to write formal specifications and
proofs of the program in a unified and consistent setting. 
</p>

<p>
From a $(PROJECT_NAME_TEXT) source code development, the
$(FOCALIZEC_NAME) compiler produces three source files: 
<ul>
<li>
a source file for the $(COQ_NAME) proof assistant to check the proofs, 
</li>
<li>
a source file for the $(CAML_NAME) compiler to build the executable program, 
</li>
<li>
a source file that contains the documentation extracted from the
development sources.
</li>
</ul>
</p>

<p>
Thanks to built-in inheritance mechanisms, the language allows to
refine a development from the coarse-grain specification to the fully
defined executable program.
</p>

<p>
The $(PROJECT_NAME_TEXT) distribution includes a library of 
mathematical algebraic structures up to multivariate polynomial
rings, a library of security policies and various examples contributed
by $(PROJECT_NAME_TEXT) users. The resulting libraries are noticeably
efficent; for instance, the complex algorithms of the algebraic library
provide runtime performances comparable to the best Computer
Algebra Systems available.
</p>

</div>

<div class="spacer"></div>

<div id="main">

<h3>New release of the $(PROJECT_NAME_TEXT) environment soon<h3>

<p>
A new release of the $(PROJECT_NAME_TEXT) environment, 
<code>$(PROJECT_NAME) $(VERSION_NUMBER_FULL)</code>, 
will be available in the coming days.
</p>

</div>


<div class="spacer"></div>

<div id="main">
<h3>Current version of the $(PROJECT_NAME_TEXT) environment<h3>
<p>

For about 3 years, the $(PROJECT_NAME_TEXT) language and compiler have been
rewritten from scratch. Numerous enhancements have <span style="font-style:
italic;">been implemented</span>. The syntax has been re-designed to be more
homogenous and flexible. The core language provides new features like
records, irrefutable pattern bindings, simpler &quot;external&quot;
mappings... All syntactic elements (species, collection, record field, sum
type constructors, ...) can be qualified. Entity parameters (&quot;<span
style="font-style:italic;">in</span>&quot; species parameter) are now managed
in a smoother way, collections get a clearer &quot;implementation&quot;
status, preventing confusion between collections and species in the
$(PROJECT_NAME_TEXT) philosophy. The compilation speed has been enhanced. The
global architecture of the compiler enables third party analyses to be
grafted onto the compiler before code generation. A new backend for the C
language is under development and should be available soon (provided license
issues can be worked out). This is the first public release of this entirely
revised system. Currently Fran&ccedil;ois Pessaux, in collaboration with
Pierre Weis and Damien Doligez are in charge of this new version of the
$(PROJECT_NAME_TEXT) environment. If you want more information, please feel
free to contact us.

</p>
</div>

<div class="spacer"></div>

<div id="main">
<h3>SSURF ANR project<h3>

<p>

The SSURF (Safety and Security UndeR Focal) ANR project has
started. This project consists in :

<ul>
  <li>
    Analyze and define the features required for an IDE in
    order to reach high levels of security.
  </li>
  <li>
    Define a generic framework in which many access control policies
    can be expressed.
  </li>
</ul>

</p>

<p>

Further information (in french) can be found
<a href="http://www-spi.lip6.fr/~jaume/ssurf.html">here.</a>

</p>
</div>

<div class="spacer"></div>
<div class="spacer"></div>

<!--#include virtual="endofpage-eng.html"-->

#**********************************************************************#
#                                                                      #
#                        FoCaLize compiler                             #
#                                                                      #
#            François Pessaux                                          #
#            Pierre Weis                                               #
#            Damien Doligez                                            #
#                                                                      #
#                               LIP6  --  INRIA Rocquencourt           #
#                                                                      #
#  Copyright 2008 LIP6 and INRIA                                       #
#  Distributed only by permission.                                     #
#                                                                      #
#**********************************************************************#

# $Id: Makefile.config,v 1.26 2008-12-23 11:59:45 weis Exp $

# Reading software configuration variables.
include $(ROOT_DIR)/.config_var

# Basic Unix commands
CD = cd
CP = cp -f
CHMODGR = chmod g+r
CHMODGRW = chmod g+rw
CHMODR = chmod +r
CHMODRX = chmod +rx
CHMODX = chmod +x
LN = ln -sf
MAKE = make
MKDIR = mkdir -p
MV = mv -f
RM = rm -rf
TARC = tar cvzf
TARX = tar xvzf
TOUCH = touch

#
## MANAGING EXTERNAL TOOLS ##
#

# Focalize distribution includes the external tools that are MANDATORY for
# focalize to work properly.
# We must provide almost all their transitive closure :(
# The first step of the installation process is to untar, compile and install
# all those tools.

# Where the installation will take place:

# The directory where the tar balls are stored.
TAR_BALLS_DIR_NAME = tarballs
TAR_BALLS_DIR = $(ROOT_DIR)/$(TAR_BALLS_DIR_NAME)
ABSOLUTE_TAR_BALLS_DIR = $(ABSOLUTE_ROOT_DIR)/$(TAR_BALLS_DIR_NAME)

# For each tool, we define its sub-directory, its tar ball file name,
# its configuration options, and make all target.

# The Caml compiler
CAML_SRC_DIR_NAME = ocaml-3.10.2
CAML_SRC_DIR = $(ROOT_DIR)/$(CAML_SRC_DIR_NAME)
ABSOLUTE_CAML_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(CAML_SRC_DIR_NAME)

# Where are Caml libraries.
CAML_DIR = "$(ABSOLUTE_CAML_SRC_DIR)/lib"

CAML_TAR_BALL = $(CAML_SRC_DIR_NAME).tar.gz
CAML_TAR_BALLS = $(CAML_TAR_BALL)
CAML_CONFIGURE_OPTIONS = -prefix "$(SHARE_PROJECT_DIR)"
CAML_MAKE_ALL_TARGET = world.opt

# Caml executable files
CAML_BYT_NAME = ocamlc
CAML_BIN_NAME = ocamlopt
CAML_DEP_NAME = ocamldep
CAML_DOC_NAME = ocamldoc
CAML_LEX_NAME = ocamllex
CAML_YAC_NAME = ocamlyacc

CAML_BYT = $(ABSOLUTE_CAML_SRC_DIR)/$(CAML_BYT_NAME)
CAML_BIN = $(ABSOLUTE_CAML_SRC)/$(CAML_BIN_NAME)
CAML_DEP = $(ABSOLUTE_CAML_SRC)/$(CAML_DEP_NAME)
CAML_DOC = $(ABSOLUTE_CAML_SRC)/$(CAML_DOC_NAME)
CAML_LEX = $(ABSOLUTE_CAML_SRC)/$(CAML_LEX_NAME)
CAML_YAC = $(ABSOLUTE_CAML_SRC)/$(CAML_YAC_NAME)

CAML_BYT_EXE = $(CAML_BYT)
CAML_BIN_EXE = $(CAML_BIN)
CAML_DEP_EXE = $(CAML_DEP)
CAML_DOC_EXE = $(CAML_DOC)
CAML_LEX_EXE = $(CAML_LEX)
CAML_YAC_EXE = $(CAML_YAC)

CAML_EXES = \
 $(CAML_BYT)\
 $(CAML_BIN)\
 $(CAML_DEP)\
 $(CAML_DOC)\
 $(CAML_LEX)\
 $(CAML_YAC)

# The CamlP5 pre-processor
CAMLP5_SRC_DIR_NAME = camlp5-5.09
CAMLP5_SRC_DIR = $(ROOT_DIR)/$(CAMLP5_SRC_DIR_NAME)
ABSOLUTE_CAMLP5_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(CAMLP5_SRC_DIR_NAME)

# Where is the CamlP5 library files for compiling programs.
CAMLP5_DIR = ${ABSOLUTE_CAMLP5_SRC_DIR}/camlp5

CAMLP5_TAR_BALL = $(CAMLP5_SRC_DIR_NAME).tgz
CAMLP5_PATCH_TAR_BALL = $(CAMLP5_SRC_DIR_NAME)_patch.tgz
CAMLP5_TAR_BALLS = $(CAMLP5_TAR_BALL) $(CAMLP5_PATCH_TAR_BALL)

CAMLP5_CONFIGURE_OPTIONS = \
 -transitional\
 -prefix "$(SHARE_PROJECT_DIR)"

CAMLP5_MAKE_ALL_TARGET = world.opt

# CamlP5 executables
CAMLP5_NAME = camlp5
CAMLP5_DIR = "$(SHARE_PROJECT_DIR)/$(CAMLP5_NAME)"

CAMLP5_EXE = $(CAMLP5_NAME)

CAMLP5_EXES = \
 $(CAMLP5_EXE)

# The Coq proof assistant
COQ_SRC_DIR_NAME = coq-8.1pl4
COQ_SRC_DIR = $(ROOT_DIR)/$(COQ_SRC_DIR_NAME)
ABSOLUTE_COQ_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(COQ_SRC_DIR_NAME)

# Where are the Coq libraries.
COQ_LIB_DIR = $(ABSOLUTE_COQ_SRC_DIR)/lib

COQ_TAR_BALL = $(COQ_SRC_DIR_NAME).tar.gz
COQ_PATCH_TAR_BALL = $(COQ_SRC_DIR_NAME)_patch.tgz
COQ_TAR_BALLS = $(COQ_TAR_BALL) $(COQ_PATCH_TAR_BALL)

COQ_CONFIGURE_OPTIONS = \
 -prefix "$(SHARE_PROJECT_DIR)"\
 -camldir "$(CAML_BIN_DIR)"\
 -camlp5dir "$(CAMLP5_LIB_DIR)"\
 -reals all\
 -coqide no

COQ_MAKE_ALL_TARGET = world

# Coq executable files
COQC_NAME = coqc

COQC = $(ABSOLUTE_COQ_SRC_DIR)/$(COQC_NAME)

COQC_EXE = $(COQC)

COQ_EXES =\
 $(COQC)

# Convenient abbrevs for all external tools stuff.
EXTERNAL_TOOLS_TAR_BALLS = $(CAML_TAR_BALL) $(CAMLP5_TAR_BALL) $(COQ_TAR_BALL)
EXTERNAL_TOOLS_DIRS = $(ABSOLUTE_CAML_SRC_DIR) $(ABSOLUTE_CAMLP5_SRC_DIR) $(ABSOLUTE_COQ_SRC_DIR)
EXTERNAL_TOOLS_EXES = $(CAML_EXES) $(CAMLP5_EXES) $(COQ_EXES)

#
## MANAGING INTERNAL TOOLS ##
#

# Internal tools are zenon (the automatic proof generator), zvtov (the
# translator from zenon proofs to coq proof lambda-terms), and focalizec (the
# compiler for focalize programs).
# All these tools are compiled in turn after configuration.

# Zenon
ZENON_SRC_DIR_NAME = zenon
ZENON_SRC_DIR = $(ROOT_DIR)/$(ZENON_SRC_DIR_NAME)
ABSOLUTE_ZENON_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(ZENON_SRC_DIR_NAME)

# Where are Zenon libraries.
ZENON_LIB_DIR = $(ABSOLUTE_ZENON_DIR)/lib

ZENON_CONFIGURE_OPTIONS = \
 -prefix "$(SHARE_PROJECT_DIR)"\
 -caml_bin_dir "$(CAML_BIN_DIR)"\
 -caml_lib_dir "$(CAML_LIB_DIR)"\
 -caml_byt "$(CAML_BYT)"\
 -caml_bin "$(CAML_BIN)"\
 -caml_lex "$(CAML_LEX)"\
 -caml_yac "$(CAML_YAC)"\
 -camlp5_lib_dir "$(SHARE_PROJECT_DIR)/lib/ocaml/camlp5"\
 -coq_lib_dir "$(SHARE_PROJECT_DIR)/lib/coq"\
 -coqc "$(COQC)"\
 -coqrc "$(COQRC)"\
 -use_coqc "$(USE_COQC)"\
 -coq_make "$(COQ_MAKE)"\
 -sum "$(SUM)"\
 -convert "$(CONVERT)"\
 -gs "$(GS)"\
 -debug "$(DEBUG)"

ZENON_MAKE_ALL_TARGET = all

ZENON_EXE_NAME = zenon
ZENON_EXE = $(ABSOLUTE_ZENON_DIR)/$(ZENON_EXE_NAME)
ZENONC = $(ZENON_EXE)

ZENON_EXES = $(ZENONC)

# Zvtov
ZVTOV_SRC_DIR_NAME = zvtov
ZVTOV_EXE_NAME = zvtov
ZVTOV_SRC_DIR = $(ROOT_DIR)/$(ZVTOV_SRC_DIR_NAME)
ABSOLUTE_ZVTOV_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(ZVTOV_SRC_DIR_NAME)
ZVTOV_EXE = $(ABSOLUTE_ZVTOV_DIR)/$(ZVTOV_EXE_NAME)
ZVTOVC = $(ZVTOV_EXE)

ZVTOV_EXES = $(ZVTOVC)

# Focalizec
FOCALIZEC_SRC_DIR_NAME = focalizec
FOCALIZEC_SRC_DIR = $(ROOT_DIR)/$(FOCALIZEC_SRC_DIR_NAME)
ABSOLUTE_FOCALIZEC_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(FOCALIZEC_SRC_DIR_NAME)

FOCALIZEC_DIR = $ABSOLUTE_FOCALIZEC_SRC_DIR/lib

FOCALIZEC_CONFIGURE_OPTIONS = \
 -prefix "$(SHARE_PROJECT_DIR)"\
 -caml_lib_dir "$(CAML_LIB_DIR)"\
 -caml_byt "$(CAML_BYT)"\
 -caml_bin "$(CAML_BIN)"\
 -caml_lex "$(CAML_LEX)"\
 -caml_yac "$(CAML_YAC)"\
 -camlp5_lib_dir "$(SHARE_PROJECT_DIR)/lib/ocaml/camlp5"\
 -coq_lib_dir "$(SHARE_PROJECT_DIR)/lib/coq"\
 -coqc "$(COQC)"\
 -coqrc "$(COQRC)"\
 -zenon_lib_dir "$(ZENON_LIB_DIR)"\
 -use_coqc "$(USE_COQC)"\
 -coq_make "$(COQ_MAKE)"\
 -sum "$(SUM)"\
 -convert "$(CONVERT)"\
 -gs "$(GS)"\
 -zvtov_lib_dir "$(ZVTOV_LIB_DIR)"\
 -debug "$(DEBUG)"

FOCALIZEC_MAKE_ALL_TARGET = all

FOCALIZEC_EXE_NAME = focalizec
FOCALIZEC_EXE = $(ABSOLUTE_FOCALIZEC_DIR)/$(FOCALIZEC_EXE_NAME)
FOCALIZEC = $(FOCALIZEC_EXE)

FOCALIZEC_EXES = "$(FOCALIZEC)"

INTERNAL_TOOLS_DIRS = $(ZENON_SRC_DIR) $(ZVTOV_SRC_DIR) $(FOCALIZEC_SRC_DIR)
INTERNAL_TOOLS_EXES = $(ZENON_EXES) $(ZVTOV_EXES) $(FOCALIZEC_EXES)

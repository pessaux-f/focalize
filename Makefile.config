#**********************************************************************#
#                                                                      #
#                        FoCaLiZe compiler                             #
#                                                                      #
#            François Pessaux                                          #
#            Pierre Weis                                               #
#            Damien Doligez                                            #
#                                                                      #
#                               LIP6  --  INRIA Rocquencourt           #
#                                                                      #
#  Copyright 2008 LIP6 and INRIA                                       #
#  Distributed only by permission.                                     #
#                                                                      #
#**********************************************************************#

# $Id: Makefile.config,v 1.53 2010-01-26 17:17:46 weis Exp $

# Reading software configuration variables.
include $(ROOT_DIR)/.config_var

# Where we store ready to use documentation files.
DOC_ROOT_DIR=$(ROOT_DIR)/doc

ABSOLUTE_DOC_ROOT_DIR=$(ABSOLUTE_ROOT_DIR)/doc

# Basic Unix commands
CD = cd
CP = cp -f
CPR = cp -fr
CHMODGR = chmod ug+r
CHMODGRW = chmod ug+rw
CHMODR = chmod +r
CHMODRX = chmod +rx
CHMODX = chmod +x
CVS = cvs
LN = ln -sf
MAKE = make
MKDIR = mkdir -p
MV = mv -f
RM = rm -rf
SSH = ssh
SCP = scp
SUDO = sudo
TARC = tar cvzf
TARX = tar xvzf
TOUCH = touch
WGET = wget

# The compilers

# Tex related processors
GS = gs
LATEX = latex
MAKEINDEX = makeindex
DVIPS = dvips
DVIPDF = dvipdf

# Htmlc compiler
HTMLC_COMPILER = htmlc
HTMLC_COMP_FLAGS =
HTMLC_INCLUDES =

HTMLC = $(HTMLC_COMPILER) $(HTMLC_COMP_FLAGS) $(HTMLC_INCLUDES)

#
## MANAGING EXTERNAL TOOLS ##
#

# Focalize distribution includes the external tools that are MANDATORY for
# focalize to work properly.
# We must provide almost all their transitive closure :(
# The first step of the installation process is to untar, compile and install
# all those tools.

# Where the installation will take place:

# The directory where the tar balls are stored.
TAR_BALLS_DIR_NAME = tarballs
TAR_BALLS_DIR = $(ROOT_DIR)/$(TAR_BALLS_DIR_NAME)
ABSOLUTE_TAR_BALLS_DIR = $(ABSOLUTE_ROOT_DIR)/$(TAR_BALLS_DIR_NAME)

# For each tool, we define its sub-directory, its tar ball file name,
# its configuration options, and make all and make install targets.

# The Caml compiler
CAML_NAME = caml
CAML_SRC_DIR_NAME = ocaml-3.11.1
CAML_SRC_DIR = $(ROOT_DIR)/$(CAML_SRC_DIR_NAME)
ABSOLUTE_CAML_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(CAML_SRC_DIR_NAME)

# Where are Caml libraries.
CAML_SRC_LIB_DIR = "$(ABSOLUTE_CAML_SRC_DIR)/lib"

CAML_TAR_BALL = $(CAML_SRC_DIR_NAME).tar.gz
CAML_TAR_BALLS = $(CAML_TAR_BALL)

CAML_CONFIGURE_OPTIONS = -prefix "$(TOOLS_PROJECT_DIR)"

CAML_MAKE_ALL_TARGET = world.opt
CAML_MAKE_INSTALL_TARGET = install

# Caml executable files
CAML_BYT_NAME = ocamlc
CAML_BIN_NAME = ocamlopt
CAML_DEP_NAME = ocamldep
CAML_DOC_NAME = ocamldoc
CAML_LEX_NAME = ocamllex
CAML_YAC_NAME = ocamlyacc

CAML_SRC_BYT = $(ABSOLUTE_CAML_SRC_DIR)/$(CAML_BYT_NAME)
CAML_SRC_BIN = $(ABSOLUTE_CAML_SRC_DIR)/$(CAML_BIN_NAME)
CAML_SRC_DEP = $(ABSOLUTE_CAML_SRC_DIR)/$(CAML_DEP_NAME)
CAML_SRC_DOC = $(ABSOLUTE_CAML_SRC_DIR)/$(CAML_DOC_NAME)
CAML_SRC_LEX = $(ABSOLUTE_CAML_SRC_DIR)/$(CAML_LEX_NAME)
CAML_SRC_YAC = $(ABSOLUTE_CAML_SRC_DIR)/$(CAML_YAC_NAME)

CAML_SRC_BYT_EXE = $(CAML_SRC_BYT)
CAML_SRC_BIN_EXE = $(CAML_SRC_BIN)
CAML_SRC_DEP_EXE = $(CAML_SRC_DEP)
CAML_SRC_DOC_EXE = $(CAML_SRC_DOC)
CAML_SRC_LEX_EXE = $(CAML_SRC_LEX)
CAML_SRC_YAC_EXE = $(CAML_SRC_YAC)

CAML_SRC_EXES = \
 $(CAML_SRC_BYT)\
 $(CAML_SRC_BIN)\
 $(CAML_SRC_DEP)\
 $(CAML_SRC_DOC)\
 $(CAML_SRC_LEX)\
 $(CAML_SRC_YAC)

# Need to define those, to honorate generic target doc and depend.
# The *_COMPILER values are defined in ./.config_var after configuration
# (hence before this makefile can be called).
CAML_DEP=$(CAML_DEP_COMPILER)
CAML_DOC=$(CAML_DOC_COMPILER)

# The CamlP5 pre-processor
CAMLP5_NAME = camlp5
CAMLP5_SRC_DIR_NAME = camlp5-5.12
CAMLP5_SRC_DIR = $(ROOT_DIR)/$(CAMLP5_SRC_DIR_NAME)
ABSOLUTE_CAMLP5_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(CAMLP5_SRC_DIR_NAME)

CAMLP5_TAR_BALL = $(CAMLP5_SRC_DIR_NAME).tgz
CAMLP5_PATCH_TAR_BALL = $(CAMLP5_SRC_DIR_NAME)_patch.tgz
CAMLP5_TAR_BALLS = $(CAMLP5_TAR_BALL) $(CAMLP5_PATCH_TAR_BALL)

CAMLP5_CONFIGURE_OPTIONS = \
 -transitional\
 -prefix "$(TOOLS_PROJECT_DIR)"

CAMLP5_MAKE_ALL_TARGET = world.opt
CAMLP5_MAKE_INSTALL_TARGET = install

# CamlP5 executables
CAMLP5_SRC_EXE = $(ABSOLUTE_CAMLP5_SRC_DIR)/$(CAMLP5_NAME)

CAMLP5_SRC_EXES = \
 $(CAMLP5_SRC_EXE)

# The Coq proof assistant
COQ_NAME = coq
COQ_SRC_DIR_NAME = coq-8.1pl4
COQ_SRC_DIR = $(ROOT_DIR)/$(COQ_SRC_DIR_NAME)
ABSOLUTE_COQ_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(COQ_SRC_DIR_NAME)

# Where are the Coq libraries.
COQ_SRC_LIB_DIR = $(ABSOLUTE_COQ_SRC_DIR)/lib

COQ_TAR_BALL = $(COQ_SRC_DIR_NAME).tar.gz
COQ_PATCH_TAR_BALL = $(COQ_SRC_DIR_NAME)_patch.tgz
COQ_TAR_BALLS = $(COQ_TAR_BALL) $(COQ_PATCH_TAR_BALL)

# Configuration flags to compile/install coq.

# For FSets and Reals library, this configuration is equivalent to
# -fsets basic -reals basic
# N.B. if you want the coq configuration to stop asking questions,
# the -reals option is mandatory, while the -fsets option is optional (?).
# N.B. We need -reals all
COQ_CONFIGURE_OPTIONS = \
 -prefix "$(TOOLS_PROJECT_DIR)"\
 -camldir "$(CAML_BIN_DIR)"\
 -camlp5dir "$(CAMLP5_LIB_DIR)"\
 -reals all\
 -coqide no

COQ_MAKE_ALL_TARGET = world
COQ_MAKE_INSTALL_TARGET = install

# Coq executable files
COQC_NAME = coqc

COQC_SRC = $(ABSOLUTE_COQ_SRC_DIR)/$(COQC_NAME)

COQC_SRC_EXE = $(COQC_SRC)

COQ_SRC_EXES = \
 $(COQC_SRC)

# Convenient abbrevs for all external tools stuff.
TOOLS_EXTERNAL_TAR_BALLS = $(CAML_TAR_BALL) $(CAMLP5_TAR_BALL) $(COQ_TAR_BALL)
TOOLS_EXTERNAL_DIRS = \
 $(ABSOLUTE_CAML_SRC_DIR) $(ABSOLUTE_CAMLP5_SRC_DIR) $(ABSOLUTE_COQ_SRC_DIR)
TOOLS_EXTERNAL_EXES = $(CAML_SRC_EXES) $(CAMLP5_SRC_EXES) $(COQ_SRC_EXES)

TOOLS_EXTERNAL = $(CAML_NAME) $(CAMLP5_NAME) $(COQ_NAME)

#
## MANAGING INTERNAL TOOLS ##
#

# Internal tools are zenon (the automatic proof generator) and zvtov (the
# translator from zenon proofs to coq proof lambda-terms).

# Zenon
ZENON_NAME = zenon
ZENON_SRC_DIR_NAME = $(ZENON_NAME)
ZENON_SRC_DIR = $(ROOT_DIR)/$(ZENON_SRC_DIR_NAME)
ABSOLUTE_ZENON_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(ZENON_SRC_DIR_NAME)

# Where are Zenon libraries.
# ZENON_LIB_DIR = $(ABSOLUTE_ZENON_SRC_DIR)/lib

ZENON_CONFIGURE_OPTIONS = \
 -debug "$(DEBUG)"\
 -static_external "true"\
 -prefix "$(TOOLS_PROJECT_DIR)"\
 -caml_prefix "$(CAML_PREFIX)"\
 -coq_prefix "$(COQ_PREFIX)"\
 -coq_rc "$(COQ_RC)"\
 -use_coq_compiler "$(USE_COQ_COMPILER)"\
 -sum "$(SUM)"\
 -convert "$(CONVERT)"\
 -gs "$(GS)"\
 -dvipdf "$(DVIPDF)"

ZENON_MAKE_ALL_TARGET = all
ZENON_MAKE_INSTALL_TARGET = install

ZENON_EXE_NAME = $(ZENON_NAME)
ZENON_EXE = $(ABSOLUTE_ZENON_SRC_DIR)/$(ZENON_EXE_NAME)

ZENON_EXES = $(ZENON_EXE)

# Zvtov
ZVTOV_NAME = zvtov
ZVTOV_SRC_DIR_NAME = $(ZVTOV_NAME)
ZVTOV_EXE_NAME = $(ZVTOV_NAME)
ZVTOV_SRC_DIR = $(ROOT_DIR)/$(ZVTOV_SRC_DIR_NAME)
ABSOLUTE_ZVTOV_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(ZVTOV_SRC_DIR_NAME)

ZVTOV_CONFIGURE_OPTIONS = \
 -debug "$(DEBUG)"\
 -static_external "true"\
 -prefix "$(TOOLS_PROJECT_DIR)"\
 -caml_prefix "$(CAML_PREFIX)"\
 -coq_prefix "$(COQ_PREFIX)"\
 -coq_rc "$(COQ_RC)"\
 -zenon_prefix "$(ZENON_PREFIX)" \
 -use_coq_compiler "$(USE_COQ_COMPILER)"\
 -sum "$(SUM)"\
 -convert "$(CONVERT)"\
 -gs "$(GS)"\
 -dvipdf "$(DVIPDF)"\
 -use_xmlrpc "$(USE_XMLRPC)"\
 -xmlrpc_flags "$(XMLRPC_FLAGS)"\
 -xmlrpc_link "$(XMLRPC_LINK)"

ZVTOV_MAKE_ALL_TARGET = all
ZVTOV_MAKE_INSTALL_TARGET = install

ZVTOV_EXE = $(ABSOLUTE_ZVTOV_DIR)/$(ZVTOV_EXE_NAME)
ZVTOVC = $(ZVTOV_EXE)

ZVTOV_EXES = $(ZVTOVC)

#
## Managing deliverables ##
#

# Deliverables are fclc (the compiler for focalize programs) and focalizedep
# (the FoCaLiZe dependency generator).

# All these tools are compiled in turn after configuration.

# The FoCaLiZe compiler
#FOCALIZEC_NAME = fclc
FOCALIZEC_NAME = focalizec
FOCALIZEC_SRC_DIR_NAME = $(FOCALIZEC_NAME)
FOCALIZEC_SRC_DIR = $(ROOT_DIR)/$(FOCALIZEC_SRC_DIR_NAME)
ABSOLUTE_FOCALIZEC_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(FOCALIZEC_SRC_DIR_NAME)

#FOCALIZEC_DIR = $(ABSOLUTE_FOCALIZEC_SRC_DIR)/lib

FOCALIZEC_CONFIGURE_OPTIONS = \
 -debug "$(DEBUG)"\
 -static_external "true"\
 -prefix "$(PREFIX)"\
 -caml_prefix "$(CAML_PREFIX)"\
 -coq_prefix "$(COQ_PREFIX)"\
 -coq_rc "$(COQ_RC)"\
 -zenon_prefix "$(ZENON_PREFIX)"\
 -use_coq_compiler "$(USE_COQ_COMPILER)"\
 -sum "$(SUM)"\
 -convert "$(CONVERT)"\
 -gs "$(GS)"\
 -dvipdf "$(DVIPDF)"\
 -zvtov_prefix "$(ZVTOV_PREFIX)"\
 -use_xmlrpc "$(USE_XMLRPC)"\
 -xmlrpc_flags "$(XMLRPC_FLAGS)"\
 -xmlrpc_link "$(XMLRPC_LINK)"

FOCALIZEC_MAKE_ALL_TARGET = all
FOCALIZEC_MAKE_INSTALL_TARGET = install

FOCALIZEC_EXE_NAME = $(FOCALIZEC_NAME)
FOCALIZEC_EXE = $(ABSOLUTE_FOCALIZEC_SRC_DIR)/$(FOCALIZEC_EXE_NAME)
FOCALIZEC = $(FOCALIZEC_EXE)

FOCALIZEC_EXES = "$(FOCALIZEC)"

# The FoCaLiZe dependency generator.
#FOCALIZEDEP_NAME = fcldep
FOCALIZEDEP_NAME = focalizedep
# Focalizedep is in the focalize compiler sub-directory.
FOCALIZEDEP_SRC_DIR_NAME = $(FOCALIZEC_SRC_DIR_NAME)/src/$(FOCALIZEDEP_NAME)
FOCALIZEDEP_SRC_DIR = $(ROOT_DIR)/$(FOCALIZEDEP_SRC_DIR_NAME)
ABSOLUTE_FOCALIZEDEP_SRC_DIR = $(ABSOLUTE_ROOT_DIR)/$(FOCALIZEDEP_SRC_DIR_NAME)

FOCALIZEDEP_MAKE_ALL_TARGET = all
FOCALIZEDEP_MAKE_INSTALL_TARGET = install

FOCALIZEDEP_EXE_NAME = $(FOCALIZEDEP_NAME)
FOCALIZEDEP_EXE = $(ABSOLUTE_FOCALIZEDEP_DIR)/$(FOCALIZEDEP_EXE_NAME)
FOCALIZEDEP = $(FOCALIZEDEP_EXE)

FOCALIZEDEP_EXES = "$(FOCALIZEDEP)"

# General definition for internal tools and deliverables.
TOOLS_INTERNAL = $(ZENON_NAME) $(ZVTOV_NAME)
TOOLS_INTERNAL_EXES = $(ZENON_EXES) $(ZVTOV_EXES)
TOOLS_INTERNAL_DIRS = $(ZENON_SRC_DIR) $(ZVTOV_SRC_DIR)
#TOOLS_INTERNAL_DEPEND_DIRS = $(TOOLS_INTERNAL_DIRS) $(FOCALIZEDEP_SRC_DIR)
#TOOLS_INTERNAL_MAKE_ALL_TARGET = all

DELIVERABLES = $(FOCALIZEC_NAME) $(FOCALIZEDEP_NAME)
DELIVERABLES_EXES = $(FOCALIZEC_EXES) $(FOCALIZEDEP_EXES)
DELIVERABLES_DIRS = $(FOCALIZEC_SRC_DIR) $(FOCALIZEDEP_SRC_DIR)
REV_DELIVERABLES_DIRS = $(FOCALIZEDEP_SRC_DIR) $(FOCALIZEC_SRC_DIR)
#DELIVERABLES_DEPEND_DIRS = $(TOOLS_INTERNAL_DIRS) $(FOCALIZEDEP_SRC_DIR)
#DELIVERABLES_MAKE_ALL_TARGET = all
